import React from 'react'
import Button from '@material-ui/core/Button';
import { TextField } from '@material-ui/core';
import { IconButton } from '@material-ui/core';
import DeleteIcon from '@material-ui/icons/Delete';
import { makeStyles } from '@material-ui/core/styles';
import AddIcon from '@material-ui/icons/Add';
import { useState } from 'react';
import { number } from 'yargs';
const useStyles = makeStyles((theme) => ({
    margin: {
      margin: theme.spacing(1),
    },
    extendedIcon: {
      marginRight: theme.spacing(1),
    },
    field: {
        width: '90%',
        marginTop: "1.3rem"
      },
  }));
  const App = () => {

    const [formValues, setFormValues] = useState([{ name: ""}])
    const classes = useStyles();
    let handleChange = (i:number, e:React.ChangeEvent<HTMLInputElement>) => {
        let newFormValues = [...formValues];
        newFormValues[i][e.target.name] = e.target.value;
        setFormValues(newFormValues);
       
      }
    
    let addFormFields = () => {
        setFormValues([...formValues, { name: "" }])
      }
    
    let removeFormFields = (i:number) => {
        let newFormValues = [...formValues];
        newFormValues.splice(i, 1);
        setFormValues(newFormValues)
    }
    
    let handleSubmit = (event:any) => {
        event.preventDefault();
        alert(JSON.stringify(formValues));
    }

    return (
        <form  onSubmit={handleSubmit}>
          {formValues.map((element, index) => (
            <div className="form-inline" key={index}>
          
              <TextField
               value={element.name || ""}
              type="text"
              name="name"
              className={classes.field}
              label="Name"
              variant="outlined"
              color="primary"
              onChange={(e:React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>)=> 
                handleChange(index, e)}
              
            />
              {
                index ? 
                  <IconButton type="button"  aria-label="delete" className={classes.margin}   onClick={() => removeFormFields(index)}><DeleteIcon></DeleteIcon></IconButton> 
                : null
              }
            </div>
          ))}
          <div className="button-section">
              <IconButton 
             className={classes.margin}
             type="button" onClick={() => addFormFields()}><AddIcon/></IconButton>
              <IconButton aria-label="delete" className={classes.margin}  type="submit">Submit</IconButton>
          </div>
      </form>
    )
}

export default App


{/* <Button variant="contained" size="large" color="primary" className={classes.margin}>
Large
</Button> */}